import io.std;

struct Vec2 {
    x, y: i64;
}

pub struct Vec3 {
    // Export fields for external modules.
    pub x, y, z: i64;
}

let zero_vec: Vec2 = Vec2{0, 0};

func add_vec2(a, b: Vec2) Vec2 {
    return .{a.x + b.x, a.y + b.y};
}

func dot(a, b: Vec2) i64 {
    return a.x * b.x + a.y * b.y;
}

func print_vec(v: Vec2) {
    std.putr('(');
    std.putint(v.x);
    std.puts(", ");
    std.putint(v.y);
    std.putr(')');
    std.putr('\n');
}

func filled(x: i64) Vec2 {
    return .{x, x};
}

func sub_vec2(a, b: Vec2) Vec2 {
    let v: Vec2;
    v.x = a.x - b.x;
    v.y = a.y - b.y;
    return v;
}

func main() {
    let v1 = Vec2{x = 10, y = 4};
    let v2 = Vec2{-5, 1};

    let sum = add_vec2(v1, v2);
    print_vec(sum);

    let p = dot(v1, v2);
    std.putint(p);
    std.putr('\n');

    let v_ptr = new Vec2{10, 20};
    print_vec(*v_ptr);

    v_ptr.x += 2;

    std.putint(v_ptr.x);
    std.putr('\n');

    let v3 = filled(10);
    print_vec(v3);
    
    v3 = sub_vec2(v3, v2);
    print_vec(v3);
}

