import io.std;

const x = y + 2;
const y = 10;
pub const z = (x * y) - 4 * (x + y);

const name = "Bob Jones";
const first_char = name[0];
const first_name = name[:5];

const primes = [2, 3, 5, 7, 11, 13];
const second_prime = primes[1];
const middle_primes = primes[1:y - 6];
const zero_array: [x]i64;

struct Vec2 {
    x, y: i64;
}

struct Vec3 {
    x, y, z: i64;
}

pub const v2: Vec2 = .{1, 2};
pub const v3: Vec3 = .{x=8, y=4, z=2};
const first_component_sum = v2.x + v3.x;

let glvar_v3 = v3;

func print_array(arr: []i64) {
    for let i = 0; i < arr._len; i++ {
        if (i > 0) {
            std.puts(", ");
        }

        std.putint(arr[i]);
    }

    std.putr('\n');
}

pub func print_vec2(v: Vec2) {
    std.putr('(');

    std.putint(v.x);
    std.puts(", ");
    std.putint(v.y);

    std.puts(")\n");
}

pub func print_vec3(v: Vec3) {
    std.putr('(');

    std.putint(v.x);
    std.puts(", ");
    std.putint(v.y);
    std.puts(", ");
    std.putint(v.z);

    std.puts(")\n");
}

func main() {
    std.putint(x);
    std.putr('\n');

    std.putint(y);
    std.putr('\n');

    std.putint(z);
    std.putr('\n');

    std.puts(name);
    std.putr('\n');

    std.putr(first_char as i32);
    std.putr('\n');

    std.puts(first_name);
    std.putr('\n');

    print_array(primes);

    std.putint(second_prime);
    std.putr('\n');

    print_array(middle_primes);
    print_array(zero_array);

    print_vec2(v2);
    print_vec3(v3);

    std.putint(first_component_sum);
    std.putr('\n');

    let local_v3 = v3;
    local_v3.x++;
    glvar_v3.y = local_v3.z + glvar_v3.x;
    
    print_vec3(local_v3);
    print_vec3(glvar_v3);

    const k = 46;
    std.putint(k);
    std.putr('\n');

    const w = Vec3{1, 2, 3};
    print_vec3(w);
}
