module core;

pub type byte = u8;
pub type rune = i32;

#if (ARCH_SIZE == "64")
pub type int = i64;
pub type uint = u64;
#else
pub type int = i32;
pub type uint = i64;
#end

/* -------------------------------------------------------------------------- */

// NOTE: We can't just directly bind `panic` to `__berry_panicUser` because the
// runtime module which implements `_panicUser` defines `__berry_panicUser` and
// so the implicit import of `panic` would create a collision.

@extern("__berry_panicUser")
func _panicUser(message: string);

@inline
pub func panic(message: string) {
    _panicUser(message);
}

/* ------------------------------------------------------------------------- */

pub func abs(n: int) int {
    if n < 0 {
        return -n;
    }

    return n;
}

pub func min(a, b: int) int {
    if a < b {
        return a;
    } 

    return b;
}

pub func max(a, b: int) int {
    if a < b {
        return b;
    }

    return a;
}