module runtime;

/* ------------------------------ External API ------------------------------ */

func _malloc(size: uint) *u8 {
    let rs = rtGetState();
    let flags = rs.swapFlags(RS_FLAG_THROW);

    let data = rs.heap.malloc(size);

    rs.flags = flags;
    return data;
}

func _realloc(data: *u8, new_size: uint) *u8 {
    let rs = rtGetState();
    let flags = rs.swapFlags(RS_FLAG_THROW);

    data = rs.heap.realloc(data, new_size);

    rs.flags = flags;
    return data;
}

func _free(data: *u8) {
    let rs = rtGetState();
    let flags = rs.swapFlags(RS_FLAG_THROW);

    rs.heap.free(data);

    rs.flags = flags;
}

/* -------------------------------- Constants ------------------------------- */

const MEM_WORD_SHIFT: uint = #if (ARCH_BITS == 64) 3 #else 2 #endif;
const MEM_WORD_SIZE: uint = 1 << MEM_WORD_SHIFT;

const MEM_MIN_ALIGN: uint = 16
const MEM_MIN_WORD_ALIGN: uint = MEM_MIN_ALIGN / MEM_WORD_SIZE; 

// TODO: remaining constants

/* ------------------------------- Allocation ------------------------------- */

// TODO